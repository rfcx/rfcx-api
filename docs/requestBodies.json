{
  "Annotation": {
    "type": "object",
    "properties": {
      "classification": {
        "type": "string",
        "description": "A classification value",
        "example": "obscurus"
      },
      "start": {
        "type": "date",
        "example": "2020-05-12T07:30:21.500Z"
      },
      "end": {
        "type": "date",
        "example": "2020-05-12T07:30:23.250Z"
      },
      "frequency_min": {
        "type": "integer",
        "example": 1530
      },
      "frequency_max": {
        "type": "integer",
        "example": 4010
      }
    },
    "required": [
      "classification",
      "start",
      "end",
      "frequencyMin",
      "frequencyMax"
    ]
  },
  "ClassifierBase": {
    "type": "object",
    "properties": {
      "id": {
        "type": "integer",
        "description": "A classifier id",
        "example": "123"
      },
      "external_id": {
        "type": "string",
        "description": "Training job ID from AI Hub (or user-defined identifier)",
        "example": "oH82Jp43"
      },
      "name": {
        "type": "string",
        "description": "Name of the classifier",
        "example": "dog bark"
      },
      "version": {
        "type": "integer",
        "description": "Version of the classifier",
        "example": "9"
      },
      "classification_values": {
        "type": "array",
        "description": "Values of the classifications that this classifier supports (supports mapping if not the same `from_model_class_name:to_classification_value`)",
        "items": {
          "type": "string"
        },
        "examples": [
          "chainsaw",
          "dog_bark:dogbark"
        ]
      },
      "status": {
        "type": "integer",
        "description": "One of: Draft (10), Staging (20), Production (30) or Retired (90)",
        "example": 10
      },
      "deployment_parameters": {
        "type": "string",
        "description": "Parameters to be passed to the model (e.g. step size)",
        "example": "step_seconds=0.48"
      },
      "model_runner": {
        "type": "string",
        "description": "Type of model runner to use (e.g. version of Tensorflow)",
        "example": "tf2"
      }
    },
    "required": [
      "id",
      "name",
      "version",
      "classification_values"
    ]
  },
  "ClassifierWithFile": {
    "allOf": [
      {
        "$ref": "#/components/requestBodies/ClassifierBase"
      },
      {
        "properties": {
          "file": {
            "type": "string",
            "format": "binary",
            "description": "A `.tar.gz` of the model"
          }
        }
      }
    ]
  },
  "Classifier": {
    "allOf": [
      {
        "$ref": "#/components/requestBodies/ClassifierBase"
      },
      {
        "properties": {
          "active_projects": {
            "type": "array",
            "description": "List of identifiers of projects to enable for this classifier",
            "items": {
              "type": "string"
            }
          },
          "active_streams": {
            "type": "array",
            "description": "List of identifiers of individual streams to enable for this classifier",
            "items": {
              "type": "string"
            }
          },
          "event_strategy": {
            "type": "string",
            "description": "Identifies the strategy for sending events"
          }
        }
      }
    ]
  },
  "Detection": {
    "type": "object",
    "properties": {
      "classifier": {
        "type": "integer",
        "description": "A classifier uuid",
        "example": 1
      },
      "classification": {
        "type": "string",
        "description": "A classification value",
        "example": "obscurus"
      },
      "start": {
        "type": "date",
        "example": "2020-05-12T07:30:21.500Z"
      },
      "end": {
        "type": "date",
        "example": "2020-05-12T07:30:22.500Z"
      },
      "confidence": {
        "type": "float",
        "example": 0.975123
      }
    },
    "required": [
      "classification",
      "classifier",
      "start",
      "end",
      "confidence"
    ]
  },
  "DetectionsCompact": {
    "type": "object",
    "properties": {
      "stream_id": {
        "type": "string",
        "description": "A stream id",
        "example": "xu82jDgX49"
      },
      "classifier": {
        "type": "integer",
        "description": "A classifier id",
        "example": 1
      },
      "classification": {
        "type": "string",
        "description": "A classification value",
        "example": "obscurus"
      },
      "start": {
        "type": "date",
        "example": "2020-05-12T07:30:21.500Z"
      },
      "end": {
        "type": "date",
        "example": "2020-05-12T07:30:22.500Z"
      },
      "confidences": {
        "type": "array",
        "items": {
          "type": "float"
        },
        "description": "An ordered list of confidence values defined as a sliding window from `start`/`end` incremented by `step`",
        "example": [
          0.975123,
          0.994343,
          0.831234,
          0.201334
        ]
      },
      "step": {
        "type": "float",
        "description": "Number of seconds between each confidence value",
        "example": 2.0
      }
    },
    "required": [
      "stream_id",
      "classification",
      "classifier",
      "start",
      "end",
      "confidences",
      "step"
    ]
  },
  "IndexValuesCompact": {
    "type": "object",
    "properties": {
      "stream_id": {
        "type": "string",
        "description": "A stream id",
        "example": "xu82jDgX49"
      },
      "index": {
        "type": "string",
        "description": "An index code",
        "example": "se"
      },
      "time": {
        "type": "date",
        "example": "2020-05-12T07:30:21.500Z"
      },
      "values": {
        "type": "array",
        "items": {
          "type": "float"
        },
        "description": "An ordered list of values from `time` incremented by `step`",
        "example": [
          0.975123,
          0.994343,
          0.831234,
          0.201334
        ]
      },
      "step": {
        "type": "float",
        "description": "Number of seconds between each value",
        "example": 2.0
      }
    },
    "required": [
      "stream_id",
      "index",
      "time",
      "values",
      "step"
    ]
  },
  "Stream": {
    "type": "object",
    "properties": {
      "id": {
        "type": "string",
        "description": "A stream id",
        "example": "xu82jDgX49"
      },
      "name": {
        "type": "string",
        "description": "A stream name",
        "example": "My Stream 1"
      },
      "latitude": {
        "type": "float",
        "description": "A stream coordinate",
        "example": 90.123
      },
      "longitude": {
        "type": "float",
        "description": "A stream coordinate",
        "example": 125.912
      },
      "description": {
        "type": "string",
        "description": "A stream description",
        "example": "Stream 1 description"
      },
      "is_public": {
        "type": "boolean",
        "description": "Whether stream is public (default false)",
        "default": "false"
      }
    },
    "required": [
      "name"
    ]
  },
  "StreamPatch": {
    "type": "object",
    "properties": {
      "name": {
        "type": "string",
        "description": "A stream name",
        "example": "My Stream 1"
      },
      "latitude": {
        "type": "float",
        "description": "A stream coordinate",
        "example": 90.123
      },
      "longitude": {
        "type": "float",
        "description": "A stream coordinate",
        "example": 125.912
      },
      "description": {
        "type": "string",
        "description": "A stream description",
        "example": "Stream 1 description"
      },
      "is_public": {
        "type": "boolean",
        "description": "Whether stream is public",
        "example": false
      },
      "restore": {
        "type": "boolean",
        "description": "Restore previously deleted stream",
        "example": true
      }
    },
    "required": []
  },
  "StreamSourceFile": {
    "type": "object",
    "properties": {
      "filename": {
        "type": "string",
        "description": "Original file name",
        "example": "1feb70b91439-2020-06-24T17-15-26.opus"
      },
      "audio_file_format": {
        "type": "string",
        "description": "Original file format",
        "example": "opus"
      },
      "duration": {
        "type": "integer",
        "description": "Original file duration in ms",
        "example": 90126
      },
      "sample_count": {
        "type": "integer",
        "description": "Original file samples count",
        "example": 4326072
      },
      "sample_rate": {
        "type": "integer",
        "description": "Original file sample rate",
        "example": 12000
      },
      "channels_count": {
        "type": "integer",
        "description": "Original file channels count (default 1)",
        "default": 1
      },
      "bit_rate": {
        "type": "integer",
        "description": "Original file bit rate",
        "example": 16384
      },
      "audio_codec": {
        "type": "string",
        "description": "Original file codec",
        "example": "opus"
      },
      "sha1_checksum": {
        "type": "string",
        "description": "Original file sha1 checksum",
        "example": "7ea9896798385afb5939cdf8349ce389f5e3b128"
      },
      "meta": {
        "type": "object",
        "description": "Any additional metadata",
        "example": {
          "date": "2020-06-24T10:11:38-07",
          "title": "SBW1607_20200624_171138.wav",
          "album": "SBx-ETH R4"
        }
      }
    },
    "required": [
      "filename",
      "audio_file_format",
      "duration",
      "sample_count",
      "sample_rate",
      "bit_rate",
      "audio_codec",
      "sha1_checksum"
    ]
  },
  "StreamSegment": {
    "type": "object",
    "properties": {
      "id": {
        "type": "uuid",
        "description": "Stream Segment id",
        "example": "c0686679-6c06-4f5d-84b5-2b4934aad33e"
      },
      "stream_source_file_id": {
        "type": "uuid",
        "description": "Stream source file id",
        "example": "c0686679-6c06-4f5d-84b5-2b4934aad33e"
      },
      "start": {
        "type": "date",
        "example": "2020-05-12T07:30:21.500Z"
      },
      "end": {
        "type": "date",
        "example": "2020-05-12T07:30:23.250Z"
      },
      "sample_count": {
        "type": "integer",
        "description": "Segment samples count",
        "example": 4326072
      },
      "file_extension": {
        "type": "string",
        "description": "Segment file extension",
        "example": "opus"
      }
    },
    "required": [
      "stream_source_file_id",
      "start",
      "end",
      "sample_count",
      "file_extension"
    ]
  },
  "Project": {
    "type": "object",
    "properties": {
      "id": {
        "type": "string",
        "description": "A project id",
        "example": "xu82jDgX49"
      },
      "name": {
        "type": "string",
        "description": "A project name",
        "example": "My Project 1"
      },
      "description": {
        "type": "string",
        "description": "A project description",
        "example": "Project 1 description"
      },
      "is_public": {
        "type": "boolean",
        "description": "Whether project is public (default false)",
        "default": "false"
      },
      "organization_id": {
        "type": "string",
        "description": "An organization id",
        "example": "mwiojDg54a"
      },
      "external_id": {
        "type": "integer",
        "description": "A project id in the external platform (e.g. Arbimon)",
        "example": 1905
      }
    },
    "required": [
      "name"
    ]
  }
}
