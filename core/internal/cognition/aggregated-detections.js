const router = require('express').Router()
const { httpErrorHandler } = require('../../../common/error-handling/http.js')
const Converter = require('../../../common/converter')
const countQuery = require('./dao/count-query')

/**
 * @swagger
 *
 * /internal/cognition/aggregated-detections:
 *   get:
 *     summary: Count detections
 *     tags:
 *       - detections
 *     parameters:
 *       - name: start
 *         description: Detections starting on or after (iso8601 or epoch) date
 *         in: query
 *         required: true
 *         type: string
 *       - name: end
 *         description: Detections starting before (iso8601 or epoch) date
 *         in: query
 *         required: true
 *         type: string
 *       - name: classifier
 *         description: Detections generated by a classifier
 *         in: query
 *         type: string
 *       - name: min_confidence
 *         description: Include detections above a minimum confidence (by default will return above minimum confidence of the classifier)
 *         in: query
 *         type: float
 *       - name: min_count
 *         description: Include results where count is at least
 *         in: query
 *         type: float
 *         default: 1
 *       - name: descending
 *         description: Order by descending time (most recent first)
 *         in: query
 *         type: boolean
 *         default: false
 *         example: true
 *       - name: limit
 *         description: Maximum number of results to return
 *         in: query
 *         type: int
 *         default: 100
 *       - name: offset
 *         description: Number of results to skip
 *         in: query
 *         type: int
 *         default: 0
 *     responses:
 *       200:
 *         description: List of cluster detection (lite) objects
 *         content:
 *           application/json:
 *             schema:
 *               type: array
 *               items:
 *                 $ref: '#/components/schemas/DetectionCluster'
 *       400:
 *         description: Invalid query parameters
 */
router.get('/aggregated-detections', (req, res) => {
  const converter = new Converter(req.query, {}, true)
  converter.convert('start').toMomentUtc()
  converter.convert('end').toMomentUtc()
  converter.convert('classifier').toInt()
  converter.convert('min_confidence').toFloat()
  converter.convert('min_count').default(1).toInt()
  converter.convert('limit').default(100).toInt()
  converter.convert('offset').default(0).toInt()

  return converter.validate()
    .then(params => countQuery(params))
    .then(detections => res.json(detections))
    .catch(httpErrorHandler(req, res, 'Failed getting detections'))
})

module.exports = router
