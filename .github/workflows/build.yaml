name: CI
on:
  workflow_dispatch:
  pull_request:
concurrency: ${{ github.workflow }}-${{ github.ref }}
jobs:
  Main:
    runs-on: ubuntu-20.04
    steps:
      - name: 'Setup: Node'
        uses: actions/setup-node@270253e841af726300e85d718a5f606959b2903c
        # v2 (2.4.1) @ 03 Nov 2021 https://github.com/actions/setup-node/tags
        with:
          node-version: '12'

      - name: 'Setup: ENV from job'
        run: |
          echo "BRANCH_NAME=`echo ${GITHUB_REF#refs/heads/}`" >> $GITHUB_ENV
  
      - name: 'Setup: Get ID of previous run' # Need to execute this early (before another run starts)
        id: latest_run
        uses: octokit/request-action@7e93b91076fad3920c29d44eb2a6311d929db3dd
        # v2 (2.1.0) @ 03 Dec 2021 https://github.com/octokit/request-action/tags
        if: always()
        with:
          # https://docs.github.com/en/rest/reference/actions#list-workflow-runs
          route: GET /repos/{owner}/{repo}/actions/workflows/{workflow_id}/runs
          owner: rfcx
          repo: rfcx-api
          workflow_id: build.yml
          per_page: 2
          branch: ${{ env.BRANCH_NAME }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: 'Setup: Print ID of previous run'
        if: always()
        run: 'echo ${{ fromJson(steps.latest_run.outputs.data).workflow_runs[1].id }}'

      - name: 'Setup: Git checkout'
        uses: actions/checkout@ec3a7ce113134d7a93b817d10a8272cb61118579
        # v2 (2.4.0) @ 03 Nov 2021 https://github.com/actions/checkout/tags

      - name: 'Setup: ENV from Git'
        run: |
          echo "COMMIT_TITLE=`git show -s --format='%s'`" >> $GITHUB_ENV
          echo "SHORT_SHA=`git rev-parse --short HEAD`" >> $GITHUB_ENV

      - name: 'Setup: Load dependencies from cache'
        uses: actions/cache@c64c572235d810460d0d6876e9c705ad5002b353
        # v2 (2.1.6) @ 03 Nov 2021 https://github.com/actions/cache/tags
        with:
          path: "**/node_modules"
          key: npm-${{ runner.os }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: npm-${{ runner.os }}

      - name: 'Setup: Load ESLint cache'
        uses: actions/cache@c64c572235d810460d0d6876e9c705ad5002b353
        # v2 (2.1.6) @ 03 Nov 2021 https://github.com/actions/cache/tags
        with:
          path: |
            .eslintcache
            */*/.eslintcache
          key: eslint-${{ runner.os }}-${{ github.sha }}
          restore-keys: eslint-${{ runner.os }}

      - name: 'Setup: Install dependencies'
        if: steps.npm-cache.outputs.cache-hit != 'true'
        run: npm ci

      - name: 'Verify: Build'
        id: build
        run: npm run build

      - name: 'Verify: Lint'
        id: lint
        run: npm run lint

      - name: 'Verify: Unit Test'
        id: test
        run: npm run jest

      # -------------------------------------------------- #
      # ALWAYS RUNS                                        #
      # -------------------------------------------------- #

      - name: 'Notify: Get conclusion of previous run'
        id: latest_run_conclusion
        uses: octokit/request-action@7e93b91076fad3920c29d44eb2a6311d929db3dd
        # v2 (2.1.0) @ 03 Dec 2021 https://github.com/octokit/request-action/tags
        if: always()
        with:
          # https://docs.github.com/en/rest/reference/actions#get-a-workflow-run
          route: GET /repos/{owner}/{repo}/actions/runs/{run_id}
          owner: rfcx
          repo: rfcx-api
          run_id: ${{ fromJson(steps.latest_run.outputs.data).workflow_runs[1].id }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: 'Notify: Log conclusion of previous run'
        if: always()
        run: 'echo ${{ fromJson(steps.latest_run_conclusion.outputs.data).conclusion }}'

      - name: 'Notify: Get data of latest successful run'
        id: latest_success
        uses: octokit/request-action@7e93b91076fad3920c29d44eb2a6311d929db3dd
        # v2 (2.1.0) @ 03 Dec 2021 https://github.com/octokit/request-action/tags
        if: always() && fromJson(steps.latest_run_conclusion.outputs.data).conclusion != 'success'
        with:
          # https://docs.github.com/en/rest/reference/actions#list-workflow-runs
          route: GET /repos/{owner}/{repo}/actions/workflows/{workflow_id}/runs
          owner: rfcx
          repo: rfcx-api
          workflow_id: build.yml
          per_page: 1
          branch: ${{ env.BRANCH_NAME }}
          status: success
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: 'Notify: Log date of latest successful run'
        if: always() && fromJson(steps.latest_run_conclusion.outputs.data).conclusion != 'success'
        run: 'echo ${{ fromJson(steps.latest_success.outputs.data).workflow_runs[0].head_commit.timestamp }}'

      - name: 'Notify: Get Slack User'
        uses: kanga333/variable-mapper@92703696e9a3f370901c3d53ae3836569b1055e5
        # v0 (0.2.2) @ 03 Nov 2021 https://github.com/kanga333/variable-mapper/tags
        if: always()
        with:
          key: '${{ github.event.sender.login }}'
          map: |
            {
              "rassokhin-s": { "SLACK_MENTION_USERS": "U0ADVPX35" },
              "Tooseriuz": { "SLACK_MENTION_USERS": "UC905TCTV" },
              "antonyharfield": { "SLACK_MENTION_USERS": "U09HZUDUY" },
              ".*": { "SLACK_MENTION_USERS": "U0ADVPX35,UC905TCTV,U09HZUDUY" }
            }
      - name: 'Notify: Slack Failed'
        uses: ravsamhq/notify-slack-action@c09876e2b9d663560dfe5ea229a8ae677b382afa
        # v1 (1.4.0) @ 03 Nov 2021 https://github.com/ravsamhq/notify-slack-action/tags
        # Notify failure if previous run was not also a failure
        if: always() && fromJson(steps.latest_run_conclusion.outputs.data).conclusion != 'failure'
        with:
          notify_when: 'failure,warning'
          status: ${{ job.status }}
          notification_title: '❌ CI: Bio-Web <{repo_url}/tree/${{ env.BRANCH_NAME }}|${{ env.BRANCH_NAME }}>'
          message_format: '*FAILED* @ <{run_url}|${{ env.COMMIT_TITLE }}>'
          footer: 'Build: ${{ steps.build.outcome }} | Lint: ${{ steps.lint.outcome }} | Test: ${{ steps.test.outcome }}'
          mention_users_when: 'failure,warnings'
          mention_users: ${{ env.SLACK_MENTION_USERS }}
        env:
          SLACK_WEBHOOK_URL: '${{ secrets.SLACK_ALERT_BIODT_WEBHOOK }}'

      - name: 'Notify: Slack Success'
        uses: ravsamhq/notify-slack-action@c09876e2b9d663560dfe5ea229a8ae677b382afa
        # v1 (1.4.0) @ 03 Nov 2021 https://github.com/ravsamhq/notify-slack-action/tags
        # Notify success if previous run was not also a success
        if: always() && fromJson(steps.latest_run_conclusion.outputs.data).conclusion != 'success'
        with:
          notify_when: 'success'
          status: ${{ job.status }}
          notification_title: '✅ CI: Bio-Web <{repo_url}/tree/${{ env.BRANCH_NAME }}|${{ env.BRANCH_NAME }}>'
          message_format: '*SUCCESS* @ <{run_url}|${{ env.COMMIT_TITLE }}> - ${{ github.event.head_commit.author.name }} fixed the build!! (broken since ${{ fromJson(steps.latest_success.outputs.data).workflow_runs[0].head_commit.timestamp }})'
          footer: 'Build: ${{ steps.build.outcome }} | Lint: ${{ steps.lint.outcome }} | Test: ${{ steps.test.outcome }}'
        env:
          SLACK_WEBHOOK_URL: '${{ secrets.SLACK_ALERT_BIODT_WEBHOOK }}'
