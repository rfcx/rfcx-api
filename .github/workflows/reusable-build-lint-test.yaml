on:
  workflow_call:
    inputs:
      runs-on:
        description: Platform to execute on
        type: string
        default: ubuntu-latest
        required: false
      branch-name:
        description: Branch name
        type: string
        required: false
      lint:
        description: Run linting
        type: boolean
        default: true
        required: false
      test:
        description: Run tests
        type: boolean
        default: true
        required: false
    outputs:
      build-outcome:
        description: Build outcome
        value: ${{ jobs.build.outputs.build-outcome }}
      lint-outcome:
        description: Lint outcome
        value: ${{ jobs.build.outputs.lint-outcome }}
      test-outcome:
        description: Test outcome
        value: ${{ jobs.build.outputs.test-outcome }}
jobs:
  build:
    runs-on: ${{ inputs.runs-on }}
    outputs:
      lint-outcome: ${{ steps.lint.outcome }}
      test-outcome: ${{ steps.test.outcome }}

    services:
      postgres:
        image: timescale/timescaledb:latest-pg14
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: test
        ports:
          - 5433:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      # v4 (4.1.1) @ Oct 2023 https://github.com/actions/checkout/tags
      - name: 'Setup: Git checkout'
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11

      - name: 'Setup: Node'
        # v4 (4.0.0) @ Oct 2023 https://github.com/actions/setup-node/tags
        uses: actions/setup-node@8f152de45cc393bb48ce5d89d36b731f54556e65
        with:
          node-version: '20.9.0'
          cache: 'yarn'
          # cache-dependency-path: 'app/yarn.lock'

      - name: 'Setup: Database init scripts'
        run: |
          find test/init.d -type f | sort | PGPASSWORD=test xargs -n1 -I % psql -U postgres -h 127.0.0.1 -p 5433 -f %

      - name: 'Setup: Load npm dependencies cache'
        # v3 (3.3.2) @ 8 Sep 2023 https://github.com/actions/cache/tags
        uses: actions/cache@704facf57e6136b1bc63b828d79edcd491f0ee84
        id: setup-dependency-cache
        with:
          path: '**/node_modules'
          key: yarn-${{ runner.os }}-${{ inputs.branch-name }}-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            yarn-${{ runner.os }}-${{ inputs.branch-name }}-
            yarn-${{ runner.os }}-

      - name: 'Setup: Install dependencies'
        if: steps.setup-dependency-cache.outputs.cache-hit != 'true'
        run: yarn

      - name: 'Setup: Load ESLint cache'
        if: ${{ inputs.lint }}
        # v3 (3.0.1) @ 30 Mar 2022 https://github.com/actions/cache/tags
        uses: actions/cache@136d96b4aee02b1f0de3ba493b1d47135042d9c0
        with:
          path: |
            .eslintcache
            */*/.eslintcache
          key: eslint-${{ runner.os }}-${{ inputs.branch-name }}
          restore-keys: |
            eslint-${{ runner.os }}-

      - name: 'Verify: Lint'
        if: ${{ inputs.lint }}
        id: lint
        run: yarn lint

      - name: 'Verify: Unit Tests'
        if: ${{ inputs.test }}
        id: unit
        run: yarn test:unit
        env:
          NODE_ENV: test

      - name: 'Verify: Integration Tests'
        if: ${{ inputs.test }}
        id: integration
        run: yarn test:int
        env:
          NODE_ENV: test
