#!/usr/bin/env node
console.log('----------------------------------\nRFCX | ./bin/start_mqtt started')

console.log(new String(require("child_process").execSync(process.cwd()+"/bin/setup")));

var debug = require("debug")("rfcx-api-mqtt");
var app = require("../app-mqtt");
var models = require("../models");

console.log('RFCX | Starting server');

var server = app.http.listen(app.http.get('port'), function(){
  console.log("http: "+app.http.get("title")+" (port "+app.http.get('port')+") ("+process.env.NODE_ENV+")");
});

app.mqtt.on("connect", function(){
    console.log("mqtt: "+app.mqtt.options.clientId+" ("+app.mqtt.options.href+":"+app.mqtt.options.port+") ("+process.env.NODE_ENV+")");
    app.mqtt.subscribe("guardians/checkins");
    console.log("mqtt: subscribed to 'guardians/checkins'");
});

app.mqtt.on("error", function(err){
    console.log(err);
//    app.mqtt.end()
})


var processMqttCheckIn = require("../utils/rfcx-checkin-mqtt/guardians-checkins-mqtt.js").processMqttCheckIn;

app.mqtt.on("message", function(topic, data){
  
  var rtrnJson = {
      checkin_id: null, 
        audio: [],
        screenshots: [],
        logs: [], 
        messages: [], 
        instructions: {
          messages: []
        } 
      };

  processMqttCheckIn(data).then(function(json){
    console.log(json);
    });


//   var metaLength = 12;
//   var jsonBlobLength = parseInt(data.toString("utf8", 0, metaLength));
//   var audioFileLength = parseInt(data.toString("utf8", metaLength+jsonBlobLength, metaLength+jsonBlobLength+metaLength));
//   var screenShotFileLength = parseInt(data.toString("utf8", metaLength+jsonBlobLength+metaLength+audioFileLength, metaLength+jsonBlobLength+metaLength+audioFileLength+metaLength));
//   var logFileLength = parseInt(data.toString("utf8", metaLength+jsonBlobLength+metaLength+audioFileLength+metaLength+screenShotFileLength, metaLength+jsonBlobLength+metaLength+audioFileLength+metaLength+screenShotFileLength+metaLength));

//   var audioFileBuffer = data.slice(metaLength+jsonBlobLength+metaLength, metaLength+jsonBlobLength+metaLength+audioFileLength);
//   var screenShotFileBuffer = data.slice(metaLength+jsonBlobLength+metaLength+audioFileLength+metaLength, metaLength+jsonBlobLength+metaLength+audioFileLength+metaLength+screenShotFileLength);
//   var logFileBuffer = data.slice(metaLength+jsonBlobLength+metaLength+audioFileLength+metaLength+screenShotFileLength+metaLength, metaLength+jsonBlobLength+metaLength+audioFileLength+metaLength+screenShotFileLength+metaLength+logFileLength);

//   zlib.gunzip(data.slice(metaLength, metaLength+jsonBlobLength), function(jsonError, jsonBuffer) {
//     var json = JSON.parse(jsonBuffer.toString("utf8"));

//     app.mqtt.publish("guardians/"+json.guardian_id,Â 
// //            //  zlib.gzip(
//             new Buffer(JSON.stringify(rtrnJson), "utf8")
// //            //  )
//         );


//   });


});