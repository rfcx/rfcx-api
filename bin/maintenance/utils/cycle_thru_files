#!/usr/bin/env node
const args = process.argv.slice(2)

const fs = require('fs')
const { syncExec } = require('child_process')

if (fs.existsSync(__dirname + '/../../../config/env_vars.js')) {
  const env = require(__dirname + '/../../../config/env_vars.js').env
  for (i in env) { process.env[i] = env[i] }
}

const ENV = ((args[args.indexOf('--env')] === ('--env')) ? args[args.indexOf('--env') + 1] : process.env.NODE_ENV)
const JSON_FILE = ((args[args.indexOf('--json')] === ('--json')) ? args[args.indexOf('--json') + 1] : null)

const allS3Keys = JSON.parse(fs.readFileSync(JSON_FILE))

console.log('number of files: ' + parseInt(allS3Keys.length))

for (i in allS3Keys) {
  const count = (parseInt(i) + 1)
  const query_cmd = __dirname + '/../utils/check_database_entry s3://' + process.env.ASSET_BUCKET_AUDIO + '/' + allS3Keys[i]
  const query_result = syncExec(query_cmd).stdout.split('*')
  const query_count = parseInt(query_result[0].trim())
  const query_guid = query_result[1].trim()
  if (query_count === 1) {
    console.log(count + ') GOOD: ' + allS3Keys[i])
  } else {
    process.stdout.write(count + ') NOT FOUND... DELETING...  ')
    const delete_cmd = __dirname + '/../utils/delete_s3_object --bucket ' + process.env.ASSET_BUCKET_AUDIO + ' --key ' + allS3Keys[i]
    const delete_result = syncExec(delete_cmd)
    console.log('DELETED: ' + delete_result.stdout)
  }
}
