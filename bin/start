#!/usr/bin/env node
console.log('----------------------------------\nRFCX | ./bin/start started')

// Ensure unhandled promises are handled by the process
require('../utils/process')

// check for environmental variable file and load if present
var fs = require('fs')
if (fs.existsSync('./config/env_vars.js')) {
  console.log('Using env_vars.js')
  const env = require('../config/env_vars.js').env
  for (const i in env) { process.env[i] = env[i] }
}

// New Relic Initialization
if (process.env.NODE_ENV === 'production') {
  process.env.NEW_RELIC_HOME = __dirname + '/config'; require('newrelic')
}

// check that all required env vars are set
require('../config/inspector')

const app = require('../app')

console.log('RFCX | Starting server')
app.listen(app.get('port'), function () {
  console.log(
    app.get('title') + ' (port ' + app.get('port') + ') (' + process.env.NODE_ENV + ')'
  )
})
